{"version":3,"sources":["contexts/GameContext.js","components/Square.js","components/Board.js","components/Game.js","App.js","index.js"],"names":["GameContext","createContext","GameContextProvider","props","useState","history","squares","Array","fill","picked","xIsNext","stepNumber","isAsc","state","setState","calculateWinner","lines","i","length","a","b","c","Provider","value","jumpTo","step","slice","handleClick","concat","calcPos","move","column","row","toggleAsc","children","Square","className","winner","onClick","Board","useContext","current","winnerInfo","winnerCells","map","square","index","includes","key","Game","status","tied","moves","desc","reverse","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e175077a.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const GameContext = createContext();\r\n\r\nconst GameContextProvider = props => {\r\n  const [state, setState] = useState({\r\n    history: [{ squares: Array(9).fill(null), picked: null }],\r\n    xIsNext: true,\r\n    stepNumber: 0,\r\n    isAsc: true,\r\n  });\r\n\r\n  const handleClick = i => {\r\n    const history = state.history.slice(0, state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = state.xIsNext ? 'X' : 'O';\r\n    setState({\r\n      history: history.concat([\r\n        {\r\n          squares,\r\n          picked: i + 1,\r\n        },\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !state.xIsNext,\r\n      isAsc: state.isAsc,\r\n    });\r\n  };\r\n\r\n  const jumpTo = step => {\r\n    setState({\r\n      history: state.history.slice(0, state.step),\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0,\r\n      isAsc: state.isAsc,\r\n    });\r\n  };\r\n\r\n  const calcPos = move => {\r\n    let column, row;\r\n    if (move % 3 === 0) {\r\n      column = 3;\r\n    } else if (move % 3 === 2) {\r\n      column = 2;\r\n    } else if (move % 3 === 1) {\r\n      column = 1;\r\n    }\r\n\r\n    if (move <= 3) {\r\n      row = 1;\r\n    } else if (move > 3 && move <= 6) {\r\n      row = 2;\r\n    } else {\r\n      row = 3;\r\n    }\r\n    return { column, row };\r\n  };\r\n\r\n  const calculateWinner = squares => {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (\r\n        squares[a] &&\r\n        squares[a] === squares[b] &&\r\n        squares[a] === squares[c]\r\n      ) {\r\n        return [squares[a], a, b, c];\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const toggleAsc = () => {\r\n    setState({\r\n      history: state.history,\r\n      stepNumber: state.stepNumber,\r\n      xIsNext: state.xIsNext,\r\n      isAsc: !state.isAsc,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GameContext.Provider\r\n      value={{\r\n        state,\r\n        calculateWinner,\r\n        jumpTo,\r\n        handleClick,\r\n        calcPos,\r\n        toggleAsc,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GameContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GameContextProvider;\r\n","import React from 'react';\r\n\r\nconst Square = props => {\r\n  return (\r\n    <button\r\n      className={props.winner ? 'square winner' : 'square'}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Square;\r\n","import React, { useContext } from 'react';\r\nimport { GameContext } from '../contexts/GameContext';\r\nimport Square from './Square';\r\n\r\nconst Board = () => {\r\n  const { state, handleClick, calculateWinner } = useContext(GameContext);\r\n  const history = state.history;\r\n  const current = history[state.stepNumber];\r\n  const winnerInfo = calculateWinner(current.squares);\r\n  const winnerCells = winnerInfo ? winnerInfo.slice(1) : [];\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      {current.squares.map((square, index) => {\r\n        if (winnerCells.includes(index)) {\r\n          return (\r\n            <Square\r\n              value={current.squares[index]}\r\n              onClick={() => handleClick(index)}\r\n              key={index}\r\n              winner={true}\r\n            />\r\n          );\r\n        }\r\n        return (\r\n          <Square\r\n            value={current.squares[index]}\r\n            onClick={() => handleClick(index)}\r\n            key={index}\r\n            winner={false}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, { useContext } from 'react';\r\nimport { GameContext } from '../contexts/GameContext';\r\nimport Board from './Board';\r\n\r\nconst Game = () => {\r\n  const { state, calculateWinner, jumpTo, calcPos, toggleAsc } = useContext(\r\n    GameContext\r\n  );\r\n\r\n  const history = state.history;\r\n  const current = history[state.stepNumber];\r\n  const winnerInfo = calculateWinner(current.squares);\r\n  const winner = winnerInfo ? winnerInfo[0] : null;\r\n\r\n  const tied = !winnerInfo && state.stepNumber === 9 ? true : false;\r\n  const moves = history.map((step, move) => {\r\n    const { column, row } = calcPos(step.picked);\r\n    const desc = move\r\n      ? 'Go to move #' + move + ` (${column}, ${row})`\r\n      : 'Go to start of game';\r\n    if (move === history.length - 1) {\r\n      return (\r\n        <li key={move}>\r\n          <button className=\"btn\" onClick={() => jumpTo(move)}>\r\n            <span className=\"bold\">{desc}</span>\r\n          </button>\r\n        </li>\r\n      );\r\n    } else {\r\n      return (\r\n        <li key={move}>\r\n          <button className=\"btn\" onClick={() => jumpTo(move)}>\r\n            {desc}\r\n          </button>\r\n        </li>\r\n      );\r\n    }\r\n  });\r\n\r\n  if (state.isAsc === false) {\r\n    moves.reverse();\r\n  }\r\n\r\n  let status;\r\n  if (winner) {\r\n    status = 'Winner ' + winner;\r\n  } else if (tied) {\r\n    status = 'Draw!';\r\n  } else {\r\n    status = 'Next player: ' + (state.xIsNext ? 'X' : 'O');\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game-board\">\r\n        <Board />\r\n      </div>\r\n      <div className=\"game-info\">\r\n        <div>{status}</div>\r\n        <button className=\"btn\" onClick={toggleAsc}>\r\n          {state.isAsc ? 'Ascending' : 'Descending'}\r\n        </button>\r\n        <ol>{moves}</ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport Game from './components/Game';\r\nimport GameContextProvider from './contexts/GameContext';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <GameContextProvider>\r\n        <Game />\r\n      </GameContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}